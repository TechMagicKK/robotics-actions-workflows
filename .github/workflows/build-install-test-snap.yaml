name: build-install-test-snap

on:
  workflow_call:
    inputs:
      ubuntu-image:
        required: false
        type: string
        default: "ubuntu-latest"
      snapcraft-channel:
        required: false
        type: string
        default: "latest/stable"
      snap-name:
        required: true
        type: string
      branch-name:
        required: true
        type: string
      snapcraft-args:
        required: false
        type: string
      snapcraft-build-path:
        required: false
        type: string
        default: "."
      snap-install-args:
        required: false
        type: string
      enable-experimental-extensions-env:
        required: false
        type: boolean
      test-script:
        description: "Custom script to run some custom snap testing"
        required: false
        type: string
      publish:
        description: "whether to publish the snap to the store"
        required: false
        type: boolean
        default: false

jobs:
  build:
    runs-on: '${{ inputs.ubuntu-image }}'
    outputs:
      snap-file: ${{ steps.build-snap.outputs.snap }}
      upload-branch-name: ${{ steps.branch-name.outputs.BRANCH_NAME }}
    steps:
    - uses: actions/checkout@v4
      with:
        ref: '${{ inputs.branch-name }}'
    - uses: snapcore/action-build@v1
      id: build-snap
      env:
        SNAPCRAFT_ENABLE_EXPERIMENTAL_EXTENSIONS : '${{ inputs.enable-experimental-extensions-env }}'
      with:
        path: ${{ inputs.snapcraft-build-path }}
        snapcraft-channel: '${{ inputs.snapcraft-channel }}'
        snapcraft-args: '${{ inputs.snapcraft-args }}'
    - name: Branch name
      id: branch-name
      run: |
        echo "BRANCH_NAME=$(echo ${{ inputs.branch-name }} | sed "s|\/|\-|")" >> "$GITHUB_OUTPUT"
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.snap-name }}-${{ steps.branch-name.outputs.BRANCH_NAME }}
        path: ${{ steps.build-snap.outputs.snap }}
  
  test:
    runs-on: '${{ inputs.ubuntu-image }}'
    needs: build
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.snap-name }}-${{needs.build.outputs.upload-branch-name}}
          path: .
      - name: Install snap with flags
        if: inputs.snap-install-args != ''
        run: |
          sudo snap install ${{needs.build.outputs.snap-file}} '${{ inputs.snap-install-args }}'
      - name: Install snap without flags
        if: inputs.snap-install-args == ''
        run: |
          sudo snap install ${{needs.build.outputs.snap-file}}
      - name: Run custom test script
        if: inputs.test-script != ''
        shell: bash
        run: |
          cat > test-script.sh << 'EOF'
            ${{ inputs.test-script }}
          EOF
          bash test-script.sh
      - name: Test info snap
        if: inputs.test-script == ''
        run: |
          snap info ${{ inputs.snap-name }}

  publish:
    if: inputs.publish == true
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.snap-name }}-${{needs.build.outputs.upload-branch-name}}
        path: .
  
    - uses: snapcore/action-publish@v1
      env:
        SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_LOGIN }}
      if: env.SNAPCRAFT_STORE_CREDENTIALS
      with:
        snap: ${{needs.build.outputs.snap-file}}
        release: ${{ startsWith(github.ref, 'refs/tags/') && 'candidate' || 'edge'}}
